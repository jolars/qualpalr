// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// edist
Rcpp::NumericMatrix edist(const Rcpp::NumericMatrix mat);
RcppExport SEXP _qualpalr_edist(SEXP matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix >::type mat(matSEXP);
    rcpp_result_gen = Rcpp::wrap(edist(mat));
    return rcpp_result_gen;
END_RCPP
}
// farthest_points
arma::uvec farthest_points(const Rcpp::NumericMatrix& data, const arma::uword n);
RcppExport SEXP _qualpalr_farthest_points(SEXP dataSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const arma::uword >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(farthest_points(data, n));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_qualpalr_edist", (DL_FUNC) &_qualpalr_edist, 1},
    {"_qualpalr_farthest_points", (DL_FUNC) &_qualpalr_farthest_points, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_qualpalr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
