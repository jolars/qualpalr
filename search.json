[{"path":[]},{"path":"/CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"interest fostering open welcoming environment, contributors maintainers pledge making participation project community harassment-free experience everyone, regardless age, body size, disability, ethnicity, gender identity expression, level experience, nationality, personal appearance, race, religion, sexual identity orientation.","code":""},{"path":"/CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes creating positive environment include: Using welcoming inclusive language respectful differing viewpoints experiences Gracefully accepting constructive criticism Focusing best community Showing empathy towards community members Examples unacceptable behavior participants include: use sexualized language imagery unwelcome sexual attention advances Trolling, insulting/derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical electronic address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"/CONDUCT.html","id":"our-responsibilities","dir":"","previous_headings":"","what":"Our Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Project maintainers responsible clarifying standards acceptable behavior expected take appropriate fair corrective action response instances unacceptable behavior. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful.","code":""},{"path":"/CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within project spaces public spaces individual representing project community. Examples representing project community include using official project e-mail address, posting via official social media account, acting appointed representative online offline event. Representation project may defined clarified project maintainers.","code":""},{"path":"/CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported contacting project team johanlarsson@outlook.com. complaints reviewed investigated result response deemed necessary appropriate circumstances. project team obligated maintain confidentiality regard reporter incident. details specific enforcement policies may posted separately. Project maintainers follow enforce Code Conduct good faith may face temporary permanent repercussions determined members project’s leadership.","code":""},{"path":"/CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 1.4, available http://contributor-covenant.org/version/1/4","code":""},{"path":"/articles/introduction.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"An introduction to qualpalr","text":"qualpalr generates distinct qualitative color palettes, primarily use R graphics. Given n (number colors generate), along subset hsl color space (cylindrical representation RGB color space) qualpalr attempts find n colors provided color subspace maximize smallest pairwise color difference. done projecting color subset HSL color space DIN99d space. DIN99d (approximately) perceptually uniform, , euclidean distance two colors space proportional perceived difference.","code":""},{"path":"/articles/introduction.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"An introduction to qualpalr","text":"qualpalr relies one basic function, qualpal(), takes input n (number colors generate) colorspace, can either list numeric vectors h (hue -360 360), s (saturation 0 1), l (lightness 0 1), length 2, specifying min max. character vector specifying one predefined color subspaces, time writing pretty, pretty_dark, rainbow, pastels. resulting object, pal, list several color tables distance matrix based DIN99d color difference formula. Methods pairs plot written qualpal objects help visualize results.  colors easily used R accessing pal$hex","code":"library(qualpalr) pal <- qualpal(n = 5, list(h = c(0, 360), s = c(0.4, 0.6), l = c(0.5, 0.85)))  # Adapt the color space to deuteranomaly of severity 0.7 pal <- qualpal(n = 5, colorspace = \"pretty\", cvd = \"deutan\", cvd_severity = 0.7) pal #> ----------------------------------------  #> Colors in the HSL color space  #>  #>         Hue Saturation Lightness #> #DCC670  60       0.46      0.61 #> #5C70C8 248       0.48      0.60 #> #99867A 353       0.50      0.62 #> #D9DED5 151       0.48      0.83 #> #B2B6E0 280       0.48      0.78 #>  #>  ----------------------------------------  #> DIN99d color difference distance matrix  #>  #>         #DCC670 #5C70C8 #99867A #D9DED5 #> #5C70C8      29                         #> #99867A      16      20                 #> #D9DED5      15      24      17         #> #B2B6E0      23      15      17      15 # Multidimensional scaling plot plot(pal)  # Pairs plot in the Lab color space pairs(pal, colorspace = \"DIN99d\") library(maps) map(\"france\", fill = TRUE, col = pal$hex, mar = c(0, 0, 0, 0))"},{"path":"/articles/introduction.html","id":"details","dir":"Articles","previous_headings":"","what":"Details","title":"An introduction to qualpalr","text":"qualpal begins generating point cloud HSL color subspace provided user, using quasi-random sobol sequence randtoolbox. color subset HSL settings h = c(-200, 120), s = c(0.3, 0.8), l = c(0.4, 0.9).  program proceeds projecting colors sRGB space.  continues projecting colors, first XYZ space, CIELab (shown ), finally DIN99d space.  DIN99d color space (Cui et al. 2002) euclidean, perceptually uniform color space. means difference two colors equal euclidean distance . take advantage computing distance matrix colors subset, finding pairwise color differences. apply power transformation (Huang et al. 2015) fine tune differences. select n colors user wanted, proceed greedily: first, find two distant points, find third point maximizes minimum distance previously selected points. repeated n points selected. points returned user; example using n = 5.","code":"#> Warning in randtoolbox::sobol(1000, dim = 3, scrambling = 2): scrambling is #> currently disabled."},{"path":"/articles/introduction.html","id":"color-specifications","dir":"Articles","previous_headings":"Details","what":"Color specifications","title":"An introduction to qualpalr","text":"time writing, qualpalr works sRGB color space CIE Standard Illuminant D65 reference white.","code":""},{"path":"/articles/introduction.html","id":"thanks","dir":"Articles","previous_headings":"","what":"Thanks","title":"An introduction to qualpalr","text":"Bruce Lindbloom’s webpage instrumental making qualpalr. Thanks also want hue, inspired make qualpalr.","code":""},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Johan Larsson. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Johan Larsson (????). qualpalr: Automatic Generation Qualitative Color Palettes. R package version 0.4.4, https://cran.r-project.org/package=qualpalr.","code":"@Manual{,   title = {{qualpalr}: Automatic Generation of Qualitative Color Palettes},   author = {{Johan Larsson}},   note = {R package version 0.4.4},   url = {https://cran.r-project.org/package=qualpalr}, }"},{"path":"/index.html","id":"qualpalr","dir":"","previous_headings":"","what":"Automatic Generation of Qualitative Color Palettes","title":"Automatic Generation of Qualitative Color Palettes","text":"qualpalr generates distinct qualitative color palettes, primarily use R graphics. Given n (number colors generate), along subset hsl color space (cylindrical representation RGB color space) qualpalr attempts find n colors provided color subspace maximize smallest pairwise color difference. done projecting color subset HSL color space DIN99d space. DIN99d (approximately) perceptually uniform, , euclidean distance two colors space proportional perceived difference. qualpalr inspired want hue.","code":""},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Automatic Generation of Qualitative Color Palettes","text":"Let’s create palette 4 colors hues 0 360, saturation 0.1 0.5, lightness 0.6 0.85. can retrieve generated colors hex format Altneratively, can create palette using one predefined color subspaces , optionally, adapt color deficiency (deuteranomaly). can look distance matrix pairwise color differences palette generated. palette may also plotted multidimensional scaling plot generated distance matrix colors palette.  might plotted one provided color spaces scatterplot matrix.","code":"library(qualpalr)  pal <- qualpal(n = 4, list(h = c(0, 360), s = c(0.1, 0.5), l = c(0.6, 0.85))) pal$hex #> [1] \"#74C970\" \"#766AC9\" \"#C86D6A\" \"#DCCFE0\" pal2 <- qualpal(   n = 4,   colorspace = \"pretty\",   cvd = \"deutan\",   cvd_severity = 0.5 ) pal2$de_DIN99d #>          #D4C76F  #616FC8  #D0E0E8 #> #616FC8 29.14409                   #> #D0E0E8 18.78602 21.76547          #> #A08587 18.59491 18.38472 18.34490 plot(pal2) pairs(pal2, colorspace = \"HSL\")"},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Automatic Generation of Qualitative Color Palettes","text":"current CRAN release can installed running development version can installed running","code":"install.packages(\"qualpalr\") devtools::install_github(\"jolars/qualpalr\")"},{"path":"/index.html","id":"versioning","dir":"","previous_headings":"","what":"Versioning","title":"Automatic Generation of Qualitative Color Palettes","text":"Versioning based semantic versioning.","code":""},{"path":"/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"Automatic Generation of Qualitative Color Palettes","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Automatic Generation of Qualitative Color Palettes","text":"qualpalr open source software, licensed GPL-3.","code":""},{"path":"/reference/autopal.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimize color palette for color vision deficiency — autopal","title":"Optimize color palette for color vision deficiency — autopal","text":"function adapts color palettes color vision deficiency (CVD) optimizing CVD severity try reach target color difference (DIN99d \\(\\delta E\\)) user's choosing. Basically, choose color palette close possible target \\(\\delta E\\) tweaking CVD severity option qualpal.","code":""},{"path":"/reference/autopal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimize color palette for color vision deficiency — autopal","text":"","code":"autopal(   n,   colorspace = \"pretty\",   cvd = c(\"protan\", \"deutan\", \"tritan\"),   target = 20 )"},{"path":"/reference/autopal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimize color palette for color vision deficiency — autopal","text":"n Number colors generate. colorspace Either 1) list three named numeric vectors: h (hue), s (saturation), l (lightness), length 2 specifying min max value range. values range -360 360 h, 0 1 s l 2), 2) character vector specifying one predefined color spaces (see ). cvd Color vision deficiency adaptation adapt color palette . target Target color difference.","code":""},{"path":"/reference/autopal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimize color palette for color vision deficiency — autopal","text":"list class qualpal following   components. HSL matrix colors HSL color space. DIN99d matrix colors DIN99d color space (power     transformations). RGB matrix colors sRGB color space. hex     character vector colors hex notation. de_DIN99d     distance matrix color differences according delta E DIN99d. min_de_DIN99d smallest pairwise DIN99d color difference.","code":""},{"path":"/reference/autopal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Optimize color palette for color vision deficiency — autopal","text":"rationale function colors color palette, cost involved adapting colors CVD -- colors still remain distinct. colors added palette, however, adapting color palette CVD eventually lead colors similar. function gradually loosens adaptation CVDs lowering severity CVD simulate picking colors (cvd_severity argument qualpal)","code":""},{"path":"/reference/autopal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimize color palette for color vision deficiency — autopal","text":"","code":"pal <- autopal(3, cvd = \"protan\", target = 15) plot(pal)"},{"path":"/reference/pairs.qualpal.html","id":null,"dir":"Reference","previous_headings":"","what":"Scatterplot matrix of qualitative color palette — pairs.qualpal","title":"Scatterplot matrix of qualitative color palette — pairs.qualpal","text":"Plots colors object class  \"qualpal\" scatterplot matrix either DIN99d (default) HSL color space.","code":""},{"path":"/reference/pairs.qualpal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scatterplot matrix of qualitative color palette — pairs.qualpal","text":"","code":"# S3 method for qualpal pairs(x, colorspace = c(\"DIN99d\", \"HSL\", \"RGB\"), ...)"},{"path":"/reference/pairs.qualpal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scatterplot matrix of qualitative color palette — pairs.qualpal","text":"x list object class \"qualpal\" generated qualpal. colorspace color space plot colors (\"DIN99d\", \"HSL\", \"RGB\"). ... Arguments pass pairs.","code":""},{"path":[]},{"path":"/reference/pairs.qualpal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scatterplot matrix of qualitative color palette — pairs.qualpal","text":"","code":"col_pal <- qualpal(3) pairs(col_pal)  pairs(col_pal, colorspace = \"HSL\")"},{"path":"/reference/plot.qualpal.html","id":null,"dir":"Reference","previous_headings":"","what":"Multidimensional scaling map of qualitative color palette — plot.qualpal","title":"Multidimensional scaling map of qualitative color palette — plot.qualpal","text":"Uses colors qualpal object compute plot multidimensional scaling (MDS) map using cmdscale Delta E DIN99d distance matrix.","code":""},{"path":"/reference/plot.qualpal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multidimensional scaling map of qualitative color palette — plot.qualpal","text":"","code":"# S3 method for qualpal plot(x, ...)"},{"path":"/reference/plot.qualpal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multidimensional scaling map of qualitative color palette — plot.qualpal","text":"x object class \"qualpal\" generated qualpal. ... Arguments pass plot.","code":""},{"path":[]},{"path":"/reference/plot.qualpal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multidimensional scaling map of qualitative color palette — plot.qualpal","text":"","code":"col_pal <- qualpal(3) plot(col_pal)"},{"path":"/reference/print.qualpal.html","id":null,"dir":"Reference","previous_headings":"","what":"Print qualpal palette — print.qualpal","title":"Print qualpal palette — print.qualpal","text":"Print result call qualpal.","code":""},{"path":"/reference/print.qualpal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print qualpal palette — print.qualpal","text":"","code":"# S3 method for qualpal print(x, colorspace = c(\"HSL\", \"DIN99d\", \"RGB\"), digits = 2, ...)"},{"path":"/reference/print.qualpal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print qualpal palette — print.qualpal","text":"x object class \"qualpal\". colorspace Color space print colors . digits Number significant digits output. (See print.default.) Setting NULL uses getOption(\"digits\"). ... Arguments pass print.default.","code":""},{"path":"/reference/print.qualpal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print qualpal palette — print.qualpal","text":"Prints colors matrix specified color space well   distance matrix color differences. Invisibly returns x.","code":""},{"path":"/reference/print.qualpal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print qualpal palette — print.qualpal","text":"","code":"f <- qualpal(3) print(f, colorspace = \"DIN99d\", digits = 3) #> ----------------------------------------  #> Colors in the DIN99d color space  #>  #>         L(99d) a(99d) b(99d) #> #C96C69   60.0   28.8   10.4 #> #6E9DCE   66.8  -13.1  -21.9 #> #9FCB6A   79.3  -17.2   28.2 #>  #>  ----------------------------------------  #> DIN99d color difference distance matrix  #>  #>         #C96C69 #6E9DCE #> #6E9DCE    24.3         #> #9FCB6A    24.1    23.8"},{"path":"/reference/qualpal.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate qualitative color palettes — qualpal","title":"Generate qualitative color palettes — qualpal","text":"Given color space collection colors, qualpal() projects colors DIN99d color space, generates color palette visually distinct colors, optionally taking color vision deficiency account.","code":""},{"path":"/reference/qualpal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate qualitative color palettes — qualpal","text":"","code":"qualpal(   n,   colorspace = \"pretty\",   cvd = c(\"protan\", \"deutan\", \"tritan\"),   cvd_severity = 0,   n_threads )"},{"path":"/reference/qualpal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate qualitative color palettes — qualpal","text":"n number colors generate. colorspace color space generate colors . Can following: list following named vectors,     length two, giving range item. h Hue, range [-360, 360] s Saturation, range [0, 1] l Lightness, range [0, 1] character vector length one specifying one     predefined color spaces: pretty Tries provide aesthetically pleasing,         still distinct color palettes. Hue ranges 0 360,         saturation 0.1 0.5, lightness 0.5 0.85.         palette suitable high n pretty_dark Like pretty darker. Hue ranges 0 360, saturation         0.1 0.5, lightness 0.2 0.4. rainbow Uses hues, chromas, lightness range. Provides         distinct aesthetically pleasing colors. pastels Pastel colors complete range hues (0-360),         saturation 0.2 0.4, lightness 0.8 0.9. matrix colors sRGB color space,     row representing unique color. data.frame can converted matrix via     data.matrix cvd Color vision deficiency adaptation. Use cvd_severity set severity color vision deficiency adapt . Permissible values \"protan\", \"deutan\", \"tritan\". cvd_severity Severity color vision deficiency adapt . Can take value 0, normal vision (default), 1, dichromatic vision. n_threads Previously number threads use, argument now deprecated.","code":""},{"path":"/reference/qualpal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate qualitative color palettes — qualpal","text":"list class qualpal following   components. HSL matrix colors HSL color space. DIN99d matrix colors DIN99d color space (power     transformations). RGB matrix colors sRGB color space. hex     character vector colors hex notation. de_DIN99d     distance matrix color differences according delta E DIN99d. min_de_DIN99d smallest pairwise DIN99d color difference.","code":""},{"path":"/reference/qualpal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate qualitative color palettes — qualpal","text":"function takes color subspace HSL color space, lightness saturation take values 0 1. Hue take values -360 360, although negative values brought lie range {0, 360}; behavior exists enable color subspaces span hues hue space circular. HSL color subspace user provides projected DIN99d color space, approximately perceptually uniform, .e. color difference proportional euclidean distance two colors. distance matrix computed , additional step, transformed using power transformations discovered Huang 2015 order fine tune differences. qualpal searches distance matrix distinct colors; iteratively first selecting random set colors iterates color, putting colors back total set replaces new color gone whole range without changing colors. Optionally, qualpal can adapt palettes cater color vision deficiency (cvd). accomplished taking colors provided user transforming colors someone cvd see, , simulating cvd. qualpal chooses colors new colors. qualpal currently supports sRGB color space D65 white point reference.","code":""},{"path":[]},{"path":"/reference/qualpal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate qualitative color palettes — qualpal","text":"","code":"# Generate 3 distinct colors from the default color space qualpal(3) #> ----------------------------------------  #> Colors in the HSL color space  #>  #>           Hue Saturation Lightness #> #C96C69   1.9       0.47      0.60 #> #6E9DCE 210.6       0.49      0.62 #> #9FCB6A  87.0       0.48      0.61 #>  #>  ----------------------------------------  #> DIN99d color difference distance matrix  #>  #>         #C96C69 #6E9DCE #> #6E9DCE      24         #> #9FCB6A      24      24  # Provide a custom color space qualpal(n = 3, list(h = c(35, 360), s = c(0.5, 0.7), l = c(0, 0.45))) #> ----------------------------------------  #> Colors in the HSL color space  #>  #>         Hue Saturation Lightness #> #BF26B8 303       0.67     0.449 #> #7CC223  87       0.70     0.449 #> #061D0B 134       0.67     0.067 #>  #>  ----------------------------------------  #> DIN99d color difference distance matrix  #>  #>         #BF26B8 #7CC223 #> #7CC223      34         #> #061D0B      30      30  qualpal(3, \"pretty\") #> ----------------------------------------  #> Colors in the HSL color space  #>  #>           Hue Saturation Lightness #> #C96C69   1.9       0.47      0.60 #> #6E9DCE 210.6       0.49      0.62 #> #9FCB6A  87.0       0.48      0.61 #>  #>  ----------------------------------------  #> DIN99d color difference distance matrix  #>  #>         #C96C69 #6E9DCE #> #6E9DCE      24         #> #9FCB6A      24      24  # Adapt palette to deuteranopia qualpal(5, colorspace = \"pretty_dark\", cvd = \"deutan\", cvd_severity = 1) #> ----------------------------------------  #> Colors in the HSL color space  #>  #>           Hue Saturation Lightness #> #121F4A 247.8       0.47      0.20 #> #AB9036  57.1       0.50      0.40 #> #2E2A1B   1.9       0.46      0.20 #> #54618D 197.1       0.49      0.37 #> #6F6C61 152.1       0.41      0.36 #>  #>  ----------------------------------------  #> DIN99d color difference distance matrix  #>  #>         #121F4A #AB9036 #2E2A1B #54618D #> #AB9036      31                         #> #2E2A1B      18      23                 #> #54618D      16      25      20         #> #6F6C61      22      15      16      16  # Adapt palette to protanomaly with severity 0.4 qualpal(8, colorspace = \"pretty_dark\", cvd = \"protan\", cvd_severity = 0.4) #> ----------------------------------------  #> Colors in the HSL color space  #>  #>           Hue Saturation Lightness #> #563F94 293.5       0.48      0.39 #> #7F8832  94.3       0.48      0.38 #> #40271E   4.1       0.48      0.23 #> #4E6D8E 200.0       0.44      0.38 #> #658B79 162.7       0.46      0.40 #> #2C3542 207.7       0.25      0.20 #> #364529 135.6       0.44      0.20 #> #7A5936  20.6       0.45      0.39 #>  #>  ----------------------------------------  #> DIN99d color difference distance matrix  #>  #>         #563F94 #7F8832 #40271E #4E6D8E #658B79 #2C3542 #364529 #> #7F8832      28                                                 #> #40271E      20      22                                         #> #4E6D8E      15      23      22                                 #> #658B79      23      14      23      15                         #> #2C3542      15      24      14      14      20                 #> #364529      23      16      14      19      16      14         #> #7A5936      23      14      14      21      18      19      14  if (FALSE) { # The range of hue cannot exceed 360 qualpal(3, list(h = c(-20, 360), s = c(0.5, 0.7), l = c(0, 0.45))) }"},{"path":"/reference/qualpalr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"qualpalr: Automatic Generation of Qualitative Color Palettes — qualpalr-package","title":"qualpalr: Automatic Generation of Qualitative Color Palettes — qualpalr-package","text":"Automatic generation distinct qualitative color palettes, optionally adapted color deficiency. takes subspace HSL color space input projects DIN99d color space selects return colors maximally distinct.","code":""},{"path":[]},{"path":"/reference/qualpalr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"qualpalr: Automatic Generation of Qualitative Color Palettes — qualpalr-package","text":"Maintainer: Johan Larsson johanlarsson@outlook.com (ORCID)","code":""},{"path":[]},{"path":"/news/index.html","id":"minor-changes-0-4-4","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"qualpalr 0.4.4","text":"dependency RcppParallel dropped. result, argument n_threads now deprecated (effect).","code":""},{"path":"/news/index.html","id":"qualpalr-043","dir":"Changelog","previous_headings":"","what":"qualpalr 0.4.3","title":"qualpalr 0.4.3","text":"CRAN release: 2018-10-29","code":""},{"path":"/news/index.html","id":"minor-changes-0-4-3","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"qualpalr 0.4.3","text":"qualpal() gains argument, n_threads, specifying number threads use computing distance matrix colors. C++ functions call namespaces explicitly using ::. Documentation hue saturation qualpal() fixed. (Closes #2, thanks @jflycn).","code":""},{"path":"/news/index.html","id":"qualpalr-042","dir":"Changelog","previous_headings":"","what":"qualpalr 0.4.2","title":"qualpalr 0.4.2","text":"CRAN release: 2017-08-28","code":""},{"path":"/news/index.html","id":"major-changes-0-4-2","dir":"Changelog","previous_headings":"","what":"Major changes","title":"qualpalr 0.4.2","text":"Palettes longer generated randomly. qualpalr previuosly started random sample colors running optimization scheme now instead picks starting set linearly spaced colors.","code":""},{"path":"/news/index.html","id":"minor-changes-0-4-2","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"qualpalr 0.4.2","text":"C++ functions registered via Rcpp.","code":""},{"path":"/news/index.html","id":"bug-fixes-0-4-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"qualpalr 0.4.2","text":"autopal() erroneously required colorspace string.","code":""},{"path":"/news/index.html","id":"qualpalr-041","dir":"Changelog","previous_headings":"","what":"qualpalr 0.4.1","title":"qualpalr 0.4.1","text":"CRAN release: 2017-05-15","code":""},{"path":"/news/index.html","id":"bug-fixes-0-4-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"qualpalr 0.4.1","text":"Fixed autopal() broken since minimum color difference returned always 0 due bug qualpal().","code":""},{"path":"/news/index.html","id":"minor-changes-0-4-1","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"qualpalr 0.4.1","text":"Now registers compiled functions.","code":""},{"path":"/news/index.html","id":"qualpalr-040","dir":"Changelog","previous_headings":"","what":"qualpalr 0.4.0","title":"qualpalr 0.4.0","text":"CRAN release: 2017-03-16","code":""},{"path":"/news/index.html","id":"major-changes-0-4-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"qualpalr 0.4.0","text":"autopal() new function tweaks amount color vision deficiency adapation match target color difference. qualpal() argument colorspace now also accepts matrix data.frame RGB colors.","code":""},{"path":"/news/index.html","id":"minor-changes-0-4-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"qualpalr 0.4.0","text":"qualpal() sorts palettes order increasing color distinctness. qualpal() argument colorblind made defunct. Documentation qualpal() improved. Colors now generated randtoolbox::torus() instead randtoolbox::sobol().","code":""},{"path":"/news/index.html","id":"qualpalr-031","dir":"Changelog","previous_headings":"","what":"qualpalr 0.3.1","title":"qualpalr 0.3.1","text":"CRAN release: 2016-12-22","code":""},{"path":"/news/index.html","id":"bug-fixes-0-3-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"qualpalr 0.3.1","text":"Dropped C++ header caused package build fail platforms. Fixed issues unitialized variables internal farthest points optimizer.","code":""},{"path":"/news/index.html","id":"qualpalr-030","dir":"Changelog","previous_headings":"","what":"qualpalr 0.3.0","title":"qualpalr 0.3.0","text":"CRAN release: 2016-12-20","code":""},{"path":"/news/index.html","id":"new-features-0-3-0","dir":"Changelog","previous_headings":"","what":"New features","title":"qualpalr 0.3.0","text":"Improved algorithm finding distinct colors. (details see .) Revamped color deficiency handling include almost cases color deficiency using methods described Machado 2010, now including tritanopia well anomalous trichromacies (deuteranomaly, tritanomaly, protanomaly). controlled via cvd_severity argument qualpal() allows user set severity color deficiency adapt – 0 normal vision 1 dichromatic vision (protanopia, deuteranopia, tritanopia).","code":""},{"path":"/news/index.html","id":"minor-improvements-0-3-0","dir":"Changelog","previous_headings":"","what":"Minor improvements","title":"qualpalr 0.3.0","text":"Distance color picking algorithms rewritten C++ using Rcpp, RcppParallel, RcppArmadillo. Phased ... argument qualpal. Lightness range predefined rainbow palette increased [0, 1]. Changed argument name colorblind cvd (color vision deficiency) since function now adapts less severe versions color deficiency. Using colorblind deprecated throw warning.","code":""},{"path":"/news/index.html","id":"bug-fixes-0-3-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"qualpalr 0.3.0","text":"Fixed typos invalid links Introduction qualpalr vignette.","code":""},{"path":"/news/index.html","id":"qualpalr-021","dir":"Changelog","previous_headings":"","what":"qualpalr 0.2.1","title":"qualpalr 0.2.1","text":"CRAN release: 2016-10-09","code":""},{"path":"/news/index.html","id":"new-features-0-2-1","dir":"Changelog","previous_headings":"","what":"New features","title":"qualpalr 0.2.1","text":"Dropped daltonization since effectively transposed color subspace given user. qualpalr now instead transforms given color subspace simulate protanopia deuteranopia picks colors. side-effect decreasing distinctness color palettes colorblind used, consistent user input.","code":""},{"path":"/news/index.html","id":"bug-fixes-and-minor-improvements-0-2-1","dir":"Changelog","previous_headings":"","what":"Bug fixes and minor improvements","title":"qualpalr 0.2.1","text":"Simulations tritanopia dropped since reliable source explain sRGB ranges converted (deuteranopia protanopia Vienot et al 1999). Added tests using data Vienot et al 1999 check color blind simulations work properly. Fixed sampling bug wherein square root saturation taken scaling provided range, generated different ranges intended. Switched sobol quasi-random sequence instead torus.","code":""},{"path":[]},{"path":"/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"","what":"New features","title":"qualpalr 0.2.0","text":"Redesigned method qualpal picks colors. Now initializes point cloud colors, projects DIN99d space, picks points greedily. Introduced real methods adapting colors color blindness daltonizing color subspaces picking colors . introduction qualpalr vignette expanded thorough description qualpalr picks colors.","code":""},{"path":"/news/index.html","id":"bug-fixes-and-minor-improvements-0-2-0","dir":"Changelog","previous_headings":"","what":"Bug fixes and minor improvements","title":"qualpalr 0.2.0","text":"Moved using grDevices::convertColor formulas Bruce Lindbloom color conversions, since former function inaccurately converts colors. Deprecated ... qualpal since function longer uses optimizer.","code":""}]
