[{"path":[]},{"path":"https://jolars.github.io/qualpalr/dev/CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"interest fostering open welcoming environment, contributors maintainers pledge making participation project community harassment-free experience everyone, regardless age, body size, disability, ethnicity, gender identity expression, level experience, nationality, personal appearance, race, religion, sexual identity orientation.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes creating positive environment include: Using welcoming inclusive language respectful differing viewpoints experiences Gracefully accepting constructive criticism Focusing best community Showing empathy towards community members Examples unacceptable behavior participants include: use sexualized language imagery unwelcome sexual attention advances Trolling, insulting/derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical electronic address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://jolars.github.io/qualpalr/dev/CONDUCT.html","id":"our-responsibilities","dir":"","previous_headings":"","what":"Our Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Project maintainers responsible clarifying standards acceptable behavior expected take appropriate fair corrective action response instances unacceptable behavior. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within project spaces public spaces individual representing project community. Examples representing project community include using official project e-mail address, posting via official social media account, acting appointed representative online offline event. Representation project may defined clarified project maintainers.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported contacting project team johanlarsson@outlook.com. complaints reviewed investigated result response deemed necessary appropriate circumstances. project team obligated maintain confidentiality regard reporter incident. details specific enforcement policies may posted separately. Project maintainers follow enforce Code Conduct good faith may face temporary permanent repercussions determined members project’s leadership.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 1.4, available http://contributor-covenant.org/version/1/4","code":""},{"path":"https://jolars.github.io/qualpalr/dev/articles/introduction.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"An introduction to qualpalr","text":"qualpalr generates distinct qualitative color palettes, primarily use R graphics. Given n (number colors generate), along subset hsl color space (cylindrical representation RGB color space) qualpalr attempts find n colors provided color subspace maximize smallest pairwise color difference. done projecting color subset HSL color space DIN99d space. DIN99d (approximately) perceptually uniform, , euclidean distance two colors space proportional perceived difference.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/articles/introduction.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"An introduction to qualpalr","text":"qualpalr relies one basic function, qualpal(), takes input n (number colors generate) colorspace, can either list numeric vectors h (hue -360 360), s (saturation 0 1), l (lightness 0 1), length 2, specifying min max. character vector specifying predefined color palette. resulting object, pal, list several color tables distance matrix based DIN99d color difference formula. Methods pairs plot written qualpal objects help visualize results.  colors easily used R accessing pal$hex","code":"library(qualpalr) pal <- qualpal(n = 5, list(h = c(-200, 120), s = c(0.3, 0.8), l = c(0.4, 0.9)))  # Adapt the color space to deuteranomaly of severity 0.7 pal <- qualpal(   n = 5,   cvd = \"deutan\",   cvd_severity = 0.7 ) pal #> ----------------------------------------  #> Colors in the HSL color space  #>  #>           Hue Saturation Lightness #> #6d6cc9 240.8       0.47      0.61 #> #73c6c0 175.4       0.42      0.62 #> #c8cb70  61.5       0.47      0.62 #> #cb7469   6.7       0.49      0.60 #> #e2cbe5 291.8       0.35      0.85 #>  #>  ----------------------------------------  #> DIN99d color difference distance matrix  #>  #>         #6d6cc9 #73c6c0 #c8cb70 #cb7469 #> #73c6c0      23                         #> #c8cb70      29      19                 #> #cb7469      23      26      20         #> #e2cbe5      19      19      21      19 # Multidimensional scaling plot plot(pal)  # Pairs plot in the Lab color space pairs(pal, colorspace = \"DIN99d\") library(maps) map(\"france\", fill = TRUE, col = pal$hex, mar = c(0, 0, 0, 0))"},{"path":"https://jolars.github.io/qualpalr/dev/articles/introduction.html","id":"details","dir":"Articles","previous_headings":"","what":"Details","title":"An introduction to qualpalr","text":"qualpal begins generating point cloud HSL color subspace provided user, using quasi-random Halton sequence. color subscape HSL settings h = c(-200, 120), s = c(0.3, 0.8), l = c(0.4, 0.9).  program proceeds projecting colors sRGB space.  continues projecting colors, first XYZ space, CIELab (shown ), finally DIN99d space.  DIN99d color space (Cui et al. 2002) Euclidean, perceptually uniform color space. means difference two colors equal euclidean distance . take advantage computing distance matrix colors subset, finding pairwise color differences. apply power transformation (Huang et al. 2015) fine tune differences. select n colors user wanted, proceed greedily: first, find two distant points, find third point maximizes minimum distance previously selected points. repeated n points selected. points returned user; example using n = 5.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/articles/introduction.html","id":"thanks","dir":"Articles","previous_headings":"","what":"Thanks","title":"An introduction to qualpalr","text":"Bruce Lindbloom’s webpage instrumental making qualpalr. Thanks also want hue, inspired make qualpalr.","code":""},{"path":[]},{"path":"https://jolars.github.io/qualpalr/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Johan Larsson. Author, maintainer.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Larsson J (2025). qualpalr: Automatic Generation Qualitative Color Palettes. R package version 0.4.4.9000, https://CRAN.R-project.org/package=qualpalr.","code":"@Manual{,   title = {{qualpalr}: Automatic Generation of Qualitative Color Palettes},   author = {Johan Larsson},   year = {2025},   note = {R package version 0.4.4.9000},   url = {https://CRAN.R-project.org/package=qualpalr}, }"},{"path":"https://jolars.github.io/qualpalr/dev/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Automatic Generation of Qualitative Color Palettes","text":"Let’s create palette 4 colors hues 0 360, saturation 0.1 0.5, lightness 0.6 0.85. can retrieve generated colors hex format Alternatively, can create palette using one predefined color subspaces , optionally, adapt color deficiency (deuteranomaly). can look distance matrix pairwise color differences palette generated. palette may also plotted multidimensional scaling plot generated distance matrix colors palette.  might plotted one provided color spaces scatterplot matrix.","code":"library(qualpalr)  pal <- qualpal(n = 4, list(h = c(0, 360), s = c(0.1, 0.5), l = c(0.6, 0.85))) pal$hex #> [1] \"#c86d75\" \"#6e6dc8\" \"#80c76d\" \"#d1d5df\" pal2 <- qualpal(   n = 4,   cvd = \"deutan\",   cvd_severity = 0.5 ) pal2$de_DIN99d #>          #c96c74  #6d6cc9  #81cbd5 #> #6d6cc9 21.60194                   #> #81cbd5 25.95410 21.45727          #> #c8cb70 22.29156 29.27338 20.55607 plot(pal2) pairs(pal2, colorspace = \"HSL\")"},{"path":"https://jolars.github.io/qualpalr/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Automatic Generation of Qualitative Color Palettes","text":"current CRAN release can installed running development version can installed running","code":"install.packages(\"qualpalr\") devtools::install_github(\"jolars/qualpalr\")"},{"path":"https://jolars.github.io/qualpalr/dev/index.html","id":"versioning","dir":"","previous_headings":"","what":"Versioning","title":"Automatic Generation of Qualitative Color Palettes","text":"Versioning based semantic versioning.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"Automatic Generation of Qualitative Color Palettes","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Automatic Generation of Qualitative Color Palettes","text":"qualpalr open source software, licensed GPL-3.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/reference/autopal-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimize color palette for color vision deficiency Deprecated: This function is deprecated and will be removed in a future release. There is no direct replacement. This function adapts color palettes to color vision deficiency (CVD) by optimizing the CVD severity to try reach a target color difference (DIN99d \\(\\delta E\\)) of the user's choosing. Basically, it will choose a color palette that is as close as possible to the target \\(\\delta E\\) by tweaking the CVD severity option in qualpal. The rationale for this function is that when there are few colors in a color palette, there is no cost involved in adapting colors to CVD – the colors will still remain distinct. As more an more colors are added to the palette, however, adapting the color palette to CVD will eventually lead to colors that are too similar. This function gradually loosens the adaptation to CVDs by lowering the severity of CVD to simulate to before picking colors (the cvd_severity argument in qualpal) — autopal-deprecated","title":"Optimize color palette for color vision deficiency Deprecated: This function is deprecated and will be removed in a future release. There is no direct replacement. This function adapts color palettes to color vision deficiency (CVD) by optimizing the CVD severity to try reach a target color difference (DIN99d \\(\\delta E\\)) of the user's choosing. Basically, it will choose a color palette that is as close as possible to the target \\(\\delta E\\) by tweaking the CVD severity option in qualpal. The rationale for this function is that when there are few colors in a color palette, there is no cost involved in adapting colors to CVD – the colors will still remain distinct. As more an more colors are added to the palette, however, adapting the color palette to CVD will eventually lead to colors that are too similar. This function gradually loosens the adaptation to CVDs by lowering the severity of CVD to simulate to before picking colors (the cvd_severity argument in qualpal) — autopal-deprecated","text":"Optimize color palette color vision deficiency Deprecated: function deprecated removed future release. direct replacement. function adapts color palettes color vision deficiency (CVD) optimizing CVD severity try reach target color difference (DIN99d \\(\\delta E\\)) user's choosing. Basically, choose color palette close possible target \\(\\delta E\\) tweaking CVD severity option qualpal. rationale function colors color palette, cost involved adapting colors CVD – colors still remain distinct. colors added palette, however, adapting color palette CVD eventually lead colors similar. function gradually loosens adaptation CVDs lowering severity CVD simulate picking colors (cvd_severity argument qualpal)","code":""},{"path":"https://jolars.github.io/qualpalr/dev/reference/autopal-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimize color palette for color vision deficiency Deprecated: This function is deprecated and will be removed in a future release. There is no direct replacement. This function adapts color palettes to color vision deficiency (CVD) by optimizing the CVD severity to try reach a target color difference (DIN99d \\(\\delta E\\)) of the user's choosing. Basically, it will choose a color palette that is as close as possible to the target \\(\\delta E\\) by tweaking the CVD severity option in qualpal. The rationale for this function is that when there are few colors in a color palette, there is no cost involved in adapting colors to CVD – the colors will still remain distinct. As more an more colors are added to the palette, however, adapting the color palette to CVD will eventually lead to colors that are too similar. This function gradually loosens the adaptation to CVDs by lowering the severity of CVD to simulate to before picking colors (the cvd_severity argument in qualpal) — autopal-deprecated","text":"n Number colors generate. colorspace Either 1) list three named numeric vectors: h (hue), s (saturation), l (lightness), length 2 specifying min max value range. values range -360 360 h, 0 1 s l 2), 2) character vector specifying one predefined color spaces (see ). cvd Color vision deficiency adaptation adapt color palette . target Target color difference.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/reference/autopal-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimize color palette for color vision deficiency Deprecated: This function is deprecated and will be removed in a future release. There is no direct replacement. This function adapts color palettes to color vision deficiency (CVD) by optimizing the CVD severity to try reach a target color difference (DIN99d \\(\\delta E\\)) of the user's choosing. Basically, it will choose a color palette that is as close as possible to the target \\(\\delta E\\) by tweaking the CVD severity option in qualpal. The rationale for this function is that when there are few colors in a color palette, there is no cost involved in adapting colors to CVD – the colors will still remain distinct. As more an more colors are added to the palette, however, adapting the color palette to CVD will eventually lead to colors that are too similar. This function gradually loosens the adaptation to CVDs by lowering the severity of CVD to simulate to before picking colors (the cvd_severity argument in qualpal) — autopal-deprecated","text":"list class qualpal following components. HSL matrix colors HSL color space. DIN99d matrix colors DIN99d color space (power transformations). RGB matrix colors sRGB color space. hex character vector colors hex notation. de_DIN99d distance matrix color differences according delta E DIN99d. min_de_DIN99d smallest pairwise DIN99d color difference.","code":""},{"path":[]},{"path":"https://jolars.github.io/qualpalr/dev/reference/convert_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert colors between colorspaces — convert_colors","title":"Convert colors between colorspaces — convert_colors","text":"Convert colors colorspaces","code":""},{"path":"https://jolars.github.io/qualpalr/dev/reference/convert_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert colors between colorspaces — convert_colors","text":"","code":"convert_colors(colors, from, to)"},{"path":"https://jolars.github.io/qualpalr/dev/reference/convert_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert colors between colorspaces — convert_colors","text":"colors matrix colors colorspace input colors, one \"rgb\", \"hsl\", \"din99d\", \"lab\", \"xyz\" colorspace output colors, one \"rgb\", \"hsl\", \"lab\", \"xyz\"","code":""},{"path":"https://jolars.github.io/qualpalr/dev/reference/convert_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert colors between colorspaces — convert_colors","text":"colors converted new colorspace","code":""},{"path":"https://jolars.github.io/qualpalr/dev/reference/pairs.qualpal.html","id":null,"dir":"Reference","previous_headings":"","what":"Scatterplot matrix of qualitative color palette — pairs.qualpal","title":"Scatterplot matrix of qualitative color palette — pairs.qualpal","text":"Plots colors object class  \"qualpal\" scatterplot matrix either DIN99d (default) HSL color space.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/reference/pairs.qualpal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scatterplot matrix of qualitative color palette — pairs.qualpal","text":"","code":"# S3 method for class 'qualpal' pairs(x, colorspace = c(\"DIN99d\", \"HSL\", \"RGB\"), ...)"},{"path":"https://jolars.github.io/qualpalr/dev/reference/pairs.qualpal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scatterplot matrix of qualitative color palette — pairs.qualpal","text":"x list object class \"qualpal\" generated qualpal. colorspace color space plot colors (\"DIN99d\", \"HSL\", \"RGB\"). ... Arguments pass pairs.","code":""},{"path":[]},{"path":"https://jolars.github.io/qualpalr/dev/reference/pairs.qualpal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scatterplot matrix of qualitative color palette — pairs.qualpal","text":"","code":"col_pal <- qualpal(3) pairs(col_pal)  pairs(col_pal, colorspace = \"HSL\")"},{"path":"https://jolars.github.io/qualpalr/dev/reference/plot.qualpal.html","id":null,"dir":"Reference","previous_headings":"","what":"Multidimensional scaling map of qualitative color palette — plot.qualpal","title":"Multidimensional scaling map of qualitative color palette — plot.qualpal","text":"Uses colors qualpal object compute plot multidimensional scaling (MDS) map using cmdscale Delta E DIN99d distance matrix.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/reference/plot.qualpal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multidimensional scaling map of qualitative color palette — plot.qualpal","text":"","code":"# S3 method for class 'qualpal' plot(x, ...)"},{"path":"https://jolars.github.io/qualpalr/dev/reference/plot.qualpal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multidimensional scaling map of qualitative color palette — plot.qualpal","text":"x object class \"qualpal\" generated qualpal. ... Arguments pass plot.","code":""},{"path":[]},{"path":"https://jolars.github.io/qualpalr/dev/reference/plot.qualpal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multidimensional scaling map of qualitative color palette — plot.qualpal","text":"","code":"col_pal <- qualpal(3) plot(col_pal)"},{"path":"https://jolars.github.io/qualpalr/dev/reference/print.qualpal.html","id":null,"dir":"Reference","previous_headings":"","what":"Print qualpal palette — print.qualpal","title":"Print qualpal palette — print.qualpal","text":"Print result call qualpal.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/reference/print.qualpal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print qualpal palette — print.qualpal","text":"","code":"# S3 method for class 'qualpal' print(x, colorspace = c(\"HSL\", \"DIN99d\", \"RGB\"), digits = 2, ...)"},{"path":"https://jolars.github.io/qualpalr/dev/reference/print.qualpal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print qualpal palette — print.qualpal","text":"x object class \"qualpal\". colorspace Color space print colors . digits Number significant digits output. (See print.default.) Setting NULL uses getOption(\"digits\"). ... Arguments pass print.default.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/reference/print.qualpal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print qualpal palette — print.qualpal","text":"Prints colors matrix specified color space well distance matrix color differences. Invisibly returns x.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/reference/print.qualpal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print qualpal palette — print.qualpal","text":"","code":"f <- qualpal(3) print(f, colorspace = \"DIN99d\", digits = 3) #> ----------------------------------------  #> Colors in the DIN99d color space  #>  #>         L(99d) a(99d) b(99d) #> #b9d179   82.9  -10.9  28.33 #> #c96c74   60.3   30.4   6.17 #> #6f99c5   65.6  -11.4 -20.76 #>  #>  ----------------------------------------  #> DIN99d color difference distance matrix  #>  #>         #b9d179 #c96c74 #> #c96c74    23.8         #> #6f99c5    23.8    23.1"},{"path":"https://jolars.github.io/qualpalr/dev/reference/qualpal-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated functions in package qualpal. The functions listed below are deprecated and will be defunct in the next major version future. When possible, alternative functions with similar functionality are also mentioned. Help pages for deprecated functions are available at help(","title":"Deprecated functions in package qualpal. The functions listed below are deprecated and will be defunct in the next major version future. When possible, alternative functions with similar functionality are also mentioned. Help pages for deprecated functions are available at help(","text":"Deprecated functions package qualpal. functions listed deprecated defunct next major version future. possible, alternative functions similar functionality also mentioned. Help pages deprecated functions available help(\"<function>-deprecated\").","code":""},{"path":"https://jolars.github.io/qualpalr/dev/reference/qualpal-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated functions in package qualpal. The functions listed below are deprecated and will be defunct in the next major version future. When possible, alternative functions with similar functionality are also mentioned. Help pages for deprecated functions are available at help(","text":"","code":"autopal(   n,   colorspace = list(h = c(0, 360), s = c(0.2, 0.5), l = c(0.6, 0.85)),   cvd = c(\"protan\", \"deutan\", \"tritan\"),   target = 20 )"},{"path":"https://jolars.github.io/qualpalr/dev/reference/qualpal-deprecated.html","id":"autopal","dir":"Reference","previous_headings":"","what":"autopal","title":"Deprecated functions in package qualpal. The functions listed below are deprecated and will be defunct in the next major version future. When possible, alternative functions with similar functionality are also mentioned. Help pages for deprecated functions are available at help(","text":"function deprecated removed future release. direct replacement available.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/reference/qualpal.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate qualitative color palettes — qualpal","title":"Generate qualitative color palettes — qualpal","text":"Given color space collection colors, qualpal() projects colors DIN99d color space, generates color palette visually distinct colors, optionally taking color vision deficiency account.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/reference/qualpal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate qualitative color palettes — qualpal","text":"","code":"qualpal(   n,   colorspace = list(h = c(0, 360), s = c(0.2, 0.5), l = c(0.6, 0.85)),   cvd = c(\"protan\", \"deutan\", \"tritan\"),   cvd_severity = 0,   bg = NULL,   metric = c(\"din99d\", \"ciede2000\", \"cie76\") )"},{"path":"https://jolars.github.io/qualpalr/dev/reference/qualpal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate qualitative color palettes — qualpal","text":"n number colors generate. colorspace color space generate colors . Can following: list following named vectors, length two, giving range item. h Hue, range -360 360 s Saturation, range 0 1 l Lightness, range 0 1 character vector length one form \"Source:Palette\", Domain name source provides color palette, Palette name color palette source. following source currently supported: \"ColorBrewer\" cvd Color vision deficiency adaptation. Use cvd_severity set severity color vision deficiency adapt . Permissible values \"protan\", \"deutan\", \"tritan\". cvd_severity Severity color vision deficiency adapt . Can take value 0, normal vision (default), 1, dichromatic vision. bg Backgrouind color consider (include) generating palette. useful avoid colros close background/canvas color. NULL (default), background color considered . color convertable via col2rgb acceptable, including hex colors. metric color metric use color distance matrix.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/reference/qualpal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate qualitative color palettes — qualpal","text":"list class qualpal following components. HSL matrix colors HSL color space. DIN99d matrix colors DIN99d color space (power transformations). RGB matrix colors sRGB color space. hex character vector colors hex notation. de_DIN99d distance matrix color differences according delta E DIN99d. min_de_DIN99d smallest pairwise DIN99d color difference.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/reference/qualpal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate qualitative color palettes — qualpal","text":"function takes color subspace HSL color space, lightness saturation take values 0 1. Hue take values -360 360, although negative values brought lie range {0, 360}; behavior exists enable color subspaces span hues hue space circular. HSL color subspace user provides projected DIN99d color space, approximately perceptually uniform, .e. color difference proportional euclidean distance two colors. distance matrix computed , additional step, transformed using power transformations discovered Huang 2015 order fine tune differences. qualpal searches distance matrix distinct colors; iteratively first selecting random set colors iterates color, putting colors back total set replaces new color gone whole range without changing colors. Optionally, qualpal can adapt palettes cater color vision deficiency (cvd). accomplished taking colors provided user transforming colors someone cvd see, , simulating cvd. qualpal chooses colors new colors. qualpal currently supports sRGB color space D65 white point reference.","code":""},{"path":[]},{"path":"https://jolars.github.io/qualpalr/dev/reference/qualpal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate qualitative color palettes — qualpal","text":"","code":"# Generate 3 distinct colors from the default color space qualpal(3) #> ----------------------------------------  #> Colors in the HSL color space  #>  #>         Hue Saturation Lightness #> #b9d179  76       0.49      0.65 #> #c96c74 355       0.47      0.61 #> #6f99c5 210       0.43      0.61 #>  #>  ----------------------------------------  #> DIN99d color difference distance matrix  #>  #>         #b9d179 #c96c74 #> #c96c74      24         #> #6f99c5      24      23  # Provide a custom color space qualpal(n = 3, list(h = c(35, 360), s = c(0.5, 0.7), l = c(0, 0.45))) #> ----------------------------------------  #> Colors in the HSL color space  #>  #>         Hue Saturation Lightness #> #9eba25  71       0.66     0.440 #> #b32eb6 298       0.60     0.449 #> #062010 143       0.68     0.076 #>  #>  ----------------------------------------  #> DIN99d color difference distance matrix  #>  #>         #9eba25 #b32eb6 #> #b32eb6      32         #> #062010      29      29  qualpal(3, \"ColorBrewer:Set2\") #> ----------------------------------------  #> Colors in the HSL color space  #>  #>         Hue Saturation Lightness #> #8da0cb 222       0.37      0.67 #> #a6d854  83       0.63      0.59 #> #fc8d62  17       0.96      0.69 #>  #>  ----------------------------------------  #> DIN99d color difference distance matrix  #>  #>         #8da0cb #a6d854 #> #a6d854      26         #> #fc8d62      24      22  # Adapt palette to deuteranopia qualpal(5, \"ColorBrewer:Dark2\", cvd = \"deutan\", cvd_severity = 1) #> ----------------------------------------  #> Colors in the HSL color space  #>  #>         Hue Saturation Lightness #> #e6ab02  44       0.98      0.45 #> #a6761d  39       0.70      0.38 #> #666666   0       0.00      0.40 #> #7570b3 244       0.31      0.57 #> #e7298a 329       0.80      0.53 #>  #>  ----------------------------------------  #> DIN99d color difference distance matrix  #>  #>         #e6ab02 #a6761d #666666 #7570b3 #> #a6761d      12                         #> #666666      23      18                 #> #7570b3      29      26      15         #> #e7298a      26      22      21      20  # Adapt palette to protanomaly with severity 0.4 qualpal(8, cvd = \"protan\", cvd_severity = 0.4) #> ----------------------------------------  #> Colors in the HSL color space  #>  #>         Hue Saturation Lightness #> #e2cbe5 292       0.35      0.85 #> #94d5d6 181       0.44      0.71 #> #e3dfbf  52       0.40      0.82 #> #78c270 114       0.40      0.60 #> #7294c0 214       0.39      0.60 #> #c28f75  21       0.39      0.61 #> #9467ca 267       0.48      0.60 #> #d074a1 330       0.50      0.64 #>  #>  ----------------------------------------  #> DIN99d color difference distance matrix  #>  #>         #e2cbe5 #94d5d6 #e3dfbf #78c270 #7294c0 #c28f75 #9467ca #> #94d5d6      17                                                 #> #e3dfbf      16      16                                         #> #78c270      23      15      15                                 #> #7294c0      17      15      22      22                         #> #c28f75      17      22      15      21      22                 #> #9467ca      18      24      26      29      15      22         #> #d074a1      16      25      22      27      20      15      14  if (FALSE) { # \\dontrun{ # The range of hue cannot exceed 360 qualpal(3, list(h = c(-20, 360), s = c(0.5, 0.7), l = c(0, 0.45))) } # }"},{"path":"https://jolars.github.io/qualpalr/dev/reference/qualpalr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"qualpalr: Automatic Generation of Qualitative Color Palettes — qualpalr-package","title":"qualpalr: Automatic Generation of Qualitative Color Palettes — qualpalr-package","text":"Automatic generation maximally distinct qualitative color palettes, optionally tailored color deficiency. list colors subspace color space used input projected DIN99d color space, colors maximally distinct chosen algorithmically.","code":""},{"path":[]},{"path":"https://jolars.github.io/qualpalr/dev/reference/qualpalr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"qualpalr: Automatic Generation of Qualitative Color Palettes — qualpalr-package","text":"Maintainer: Johan Larsson johanlarsson@outlook.com (ORCID)","code":""},{"path":[]},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"new-or-modified-features-1-0-0","dir":"Changelog","previous_headings":"","what":"New or Modified Features","title":"qualpalr 1.0.0","text":"character method qualpal() function now accepts name predefined palette, \"ColorBrewer::Set1\" \"Tableau::10\", use corresponding palette’s colors input. Passing one old colorspace names now throws warning removed next major release. qualpal() now accepts background color bg argument, considered generating palette, included fina palette. color difference metric qualpal() can now specified using metric argument, accepts either \"din99d\" (default), \"ciede2000\", \"cie76\". Expect slower performance \"ciede2000\". autopal() function now deprecated removed int next major release. direct replacement.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"refactoring-1-0-0","dir":"Changelog","previous_headings":"","what":"Refactoring","title":"qualpalr 1.0.0","text":"entire C++ backend package rewritten outsourced separate C++ library, qualpal.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"bug-fixes-1-0-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"qualpalr 1.0.0","text":"inconsistency conversion Lab DIN99d color space, reference white point modified correctly, fixed.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"performance-improvements-1-0-0","dir":"Changelog","previous_headings":"","what":"Performance Improvements","title":"qualpalr 1.0.0","text":"color distance computation parallelized using OpenMP. heavy lifting now done C++, significantly improve performance, especially larger palettes.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"qualpalr-044","dir":"Changelog","previous_headings":"","what":"qualpalr 0.4.4","title":"qualpalr 0.4.4","text":"CRAN release: 2023-09-13","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"minor-changes-0-4-4","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"qualpalr 0.4.4","text":"dependency RcppParallel dropped. result, argument n_threads now deprecated (effect).","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"qualpalr-043","dir":"Changelog","previous_headings":"","what":"qualpalr 0.4.3","title":"qualpalr 0.4.3","text":"CRAN release: 2018-10-29","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"minor-changes-0-4-3","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"qualpalr 0.4.3","text":"qualpal() gains argument, n_threads, specifying number threads use computing distance matrix colors. C++ functions call namespaces explicitly using ::. Documentation hue saturation qualpal() fixed. (Closes #2, thanks @jflycn).","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"qualpalr-042","dir":"Changelog","previous_headings":"","what":"qualpalr 0.4.2","title":"qualpalr 0.4.2","text":"CRAN release: 2017-08-28","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"major-changes-0-4-2","dir":"Changelog","previous_headings":"","what":"Major changes","title":"qualpalr 0.4.2","text":"Palettes longer generated randomly. qualpalr previously started random sample colors running optimization scheme now instead picks starting set linearly spaced colors.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"minor-changes-0-4-2","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"qualpalr 0.4.2","text":"C++ functions registered via Rcpp.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"bug-fixes-0-4-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"qualpalr 0.4.2","text":"autopal() erroneously required colorspace string.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"qualpalr-041","dir":"Changelog","previous_headings":"","what":"qualpalr 0.4.1","title":"qualpalr 0.4.1","text":"CRAN release: 2017-05-15","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"bug-fixes-0-4-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"qualpalr 0.4.1","text":"Fixed autopal() broken since minimum color difference returned always 0 due bug qualpal().","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"minor-changes-0-4-1","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"qualpalr 0.4.1","text":"Now registers compiled functions.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"qualpalr-040","dir":"Changelog","previous_headings":"","what":"qualpalr 0.4.0","title":"qualpalr 0.4.0","text":"CRAN release: 2017-03-16","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"major-changes-0-4-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"qualpalr 0.4.0","text":"autopal() new function tweaks amount color vision deficiency adaptation match target color difference. qualpal() argument colorspace now also accepts matrix data.frame RGB colors.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"minor-changes-0-4-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"qualpalr 0.4.0","text":"qualpal() sorts palettes order increasing color distinctness. qualpal() argument colorblind made defunct. Documentation qualpal() improved. Colors now generated randtoolbox::torus() instead randtoolbox::sobol().","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"qualpalr-031","dir":"Changelog","previous_headings":"","what":"qualpalr 0.3.1","title":"qualpalr 0.3.1","text":"CRAN release: 2016-12-22","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"bug-fixes-0-3-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"qualpalr 0.3.1","text":"Dropped C++ header caused package build fail platforms. Fixed issues uninitialized variables internal farthest points optimizer.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"qualpalr-030","dir":"Changelog","previous_headings":"","what":"qualpalr 0.3.0","title":"qualpalr 0.3.0","text":"CRAN release: 2016-12-20","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"new-features-0-3-0","dir":"Changelog","previous_headings":"","what":"New features","title":"qualpalr 0.3.0","text":"Improved algorithm finding distinct colors. (details see .) Revamped color deficiency handling include almost cases color deficiency using methods described Machado et al. 2009, now including tritanopia well anomalous trichromacies (deuteranomaly, tritanomaly, protanomaly). controlled via cvd_severity argument qualpal() allows user set severity color deficiency adapt – 0 normal vision 1 dichromatic vision (protanopia, deuteranopia, tritanopia).","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"minor-improvements-0-3-0","dir":"Changelog","previous_headings":"","what":"Minor improvements","title":"qualpalr 0.3.0","text":"Distance color picking algorithms rewritten C++ using Rcpp, RcppParallel, RcppArmadillo. Phased ... argument qualpal. Lightness range predefined rainbow palette increased [0, 1]. Changed argument name colorblind cvd (color vision deficiency) since function now adapts less severe versions color deficiency. Using colorblind deprecated throw warning.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"bug-fixes-0-3-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"qualpalr 0.3.0","text":"Fixed typos invalid links Introduction qualpalr vignette.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"qualpalr-021","dir":"Changelog","previous_headings":"","what":"qualpalr 0.2.1","title":"qualpalr 0.2.1","text":"CRAN release: 2016-10-09","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"new-features-0-2-1","dir":"Changelog","previous_headings":"","what":"New features","title":"qualpalr 0.2.1","text":"Dropped daltonization since effectively transposed color subspace given user. qualpalr now instead transforms given color subspace simulate protanopia deuteranopia picks colors. side-effect decreasing distinctness color palettes colorblind used, consistent user input.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"bug-fixes-and-minor-improvements-0-2-1","dir":"Changelog","previous_headings":"","what":"Bug fixes and minor improvements","title":"qualpalr 0.2.1","text":"Simulations tritanopia dropped since reliable source explain sRGB ranges converted (deuteranopia protanopia Vienot et al 1999). Added tests using data Vienot et al 1999 check color blind simulations work properly. Fixed sampling bug wherein square root saturation taken scaling provided range, generated different ranges intended. Switched sobol quasi-random sequence instead torus.","code":""},{"path":[]},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"","what":"New features","title":"qualpalr 0.2.0","text":"Redesigned method qualpal picks colors. Now initializes point cloud colors, projects DIN99d space, picks points greedily. Introduced real methods adapting colors color blindness daltonizing color subspaces picking colors . introduction qualpalr vignette expanded thorough description qualpalr picks colors.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"bug-fixes-and-minor-improvements-0-2-0","dir":"Changelog","previous_headings":"","what":"Bug fixes and minor improvements","title":"qualpalr 0.2.0","text":"Moved using grDevices::convertColor formulas Bruce Lindbloom color conversions, since former function inaccurately converts colors. Deprecated ... qualpal since function longer uses optimizer.","code":""}]
