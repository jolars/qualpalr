[{"path":[]},{"path":"https://jolars.github.io/qualpalr/dev/CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"interest fostering open welcoming environment, contributors maintainers pledge making participation project community harassment-free experience everyone, regardless age, body size, disability, ethnicity, gender identity expression, level experience, nationality, personal appearance, race, religion, sexual identity orientation.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes creating positive environment include: Using welcoming inclusive language respectful differing viewpoints experiences Gracefully accepting constructive criticism Focusing best community Showing empathy towards community members Examples unacceptable behavior participants include: use sexualized language imagery unwelcome sexual attention advances Trolling, insulting/derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical electronic address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://jolars.github.io/qualpalr/dev/CONDUCT.html","id":"our-responsibilities","dir":"","previous_headings":"","what":"Our Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Project maintainers responsible clarifying standards acceptable behavior expected take appropriate fair corrective action response instances unacceptable behavior. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within project spaces public spaces individual representing project community. Examples representing project community include using official project e-mail address, posting via official social media account, acting appointed representative online offline event. Representation project may defined clarified project maintainers.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported contacting project team johanlarsson@outlook.com. complaints reviewed investigated result response deemed necessary appropriate circumstances. project team obligated maintain confidentiality regard reporter incident. details specific enforcement policies may posted separately. Project maintainers follow enforce Code Conduct good faith may face temporary permanent repercussions determined members project’s leadership.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 1.4, available http://contributor-covenant.org/version/1/4","code":""},{"path":"https://jolars.github.io/qualpalr/dev/articles/introduction.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"An introduction to qualpalr","text":"qualpalr generates qualitative color palettes optimized maximally distinct colors. Given n (number colors generate), along subset hsl color space1 (cylindrical representation RGB color space) qualpalr attempts find n colors provided color subspace maximize smallest pairwise color difference. done computing pairwise color differences input colors, selecting n colors maximize minimum pairwise color difference.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/articles/introduction.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"An introduction to qualpalr","text":"qualpalr main workhorse qualpal(), takes input n (number colors generate) colorspace, can either list numeric vectors h (hue -360 360), s (saturation 0 1), l (lightness 0 1), length 2, specifying min max, list numeric vectors h (hue -360 360), c (chroma 0 100), l (lightness 0 100), length 2, specifying min max, character vector specifying predefined color palette. resulting object, pal, list several color tables distance matrix based based color difference metric used, default CIEDE2000 (metric = ciede2000). Methods pairs plot written qualpal objects help visualize results.  colors easily used R accessing pal$hex","code":"library(qualpalr) pal <- qualpal(5, list(h = c(-200, 120), s = c(0.3, 0.8), l = c(0.4, 0.9)))  # Adapt the color space to deuteranopia of severity 0.7 pal <- qualpal(5, cvd = c(deutan = 0.7)) pal ## ----------------------------------------  ## Colors in the HSL color space  ##  ##           Hue Saturation Lightness ## #6d6cc9 240.8       0.47      0.61 ## #c8e7de 162.8       0.40      0.85 ## #c884a9 327.7       0.39      0.65 ## #cb7469   6.7       0.49      0.60 ## #c8cb70  61.5       0.47      0.62 ##  ##  ----------------------------------------  ## DIN99d color difference distance matrix  ##  ##         #6d6cc9 #c8e7de #c884a9 #cb7469 ## #c8e7de      24                         ## #c884a9      17      22                 ## #cb7469      23      24      12         ## #c8cb70      29      16      23      20 # Multidimensional scaling plot plot(pal)  # Pairs plot in the DIN99d color space pairs(pal, colorspace = \"DIN99d\") library(maps) map(\"france\", fill = TRUE, col = pal$hex, mar = c(0, 0, 0, 0))"},{"path":"https://jolars.github.io/qualpalr/dev/articles/introduction.html","id":"details","dir":"Articles","previous_headings":"","what":"Details","title":"An introduction to qualpalr","text":"qualpal begins generating point cloud HSL color subspace provided user, using quasi-random Halton sequence. color subspace HSL settings h = c(-200, 120), s = c(0.3, 0.8), l = c(0.4, 0.9).  program proceeds projecting colors sRGB space.  continues projecting colors XYZ space. , behavior depends metric used. default, qualpal uses CIEDE2000 color difference formula (Sharma, Wu, Dalal 2005), current state art color difference metrics standard defined International Commission Illumination (CIE). illustrative purposes, however, show procedure DIN99d color space (Cui et al. 2002) used instead, perceptually uniform color space uses Euclidean distance color difference metric. makes computationally simpler faster algorithm, accurate CIEDE2000.  using DIN99d color space, also apply power transformation (Huang et al. 2015) fine tune differences. select n colors user wanted, proceed greedily: first, find two distant points, find third point maximizes minimum distance previously selected points. repeated n points selected. points returned user; example using n = 5.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/articles/introduction.html","id":"thanks","dir":"Articles","previous_headings":"","what":"Thanks","title":"An introduction to qualpalr","text":"Bruce Lindbloom’s webpage instrumental making qualpalr. Thanks also want hue, inspired make qualpalr.","code":""},{"path":[]},{"path":"https://jolars.github.io/qualpalr/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Johan Larsson. Author, maintainer.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Larsson J (2025). qualpalr: Automatic Generation Qualitative Color Palettes. R package version 0.4.4.9000, https://CRAN.R-project.org/package=qualpalr.","code":"@Manual{,   title = {{qualpalr}: Automatic Generation of Qualitative Color Palettes},   author = {Johan Larsson},   year = {2025},   note = {R package version 0.4.4.9000},   url = {https://CRAN.R-project.org/package=qualpalr}, }"},{"path":"https://jolars.github.io/qualpalr/dev/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Automatic Generation of Qualitative Color Palettes","text":"Let’s create palette 4 colors hues 0 360, saturation 0.1 0.5, lightness 0.6 0.85. can retrieve generated colors hex format Alternatively, can create palette using one predefined color subspaces , optionally, adapt color deficiency (deuteranomaly). can look distance matrix pairwise color differences palette generated. palette may also plotted multidimensional scaling plot generated distance matrix colors palette.  might plotted one provided color spaces scatterplot matrix.","code":"library(qualpalr)  pal <- qualpal(n = 4, list(h = c(0, 360), s = c(0.1, 0.5), l = c(0.6, 0.85))) pal$hex #> [1] \"#c86d75\" \"#6e6dc8\" \"#80c76d\" \"#d1d5df\" pal2 <- qualpal(   n = 4,   cvd = \"deutan\",   cvd_severity = 0.5 ) pal2$de_DIN99d #>          #c96c74  #6d6cc9  #81cbd5 #> #6d6cc9 21.60194                   #> #81cbd5 25.95410 21.45727          #> #c8cb70 22.29156 29.27338 20.55607 plot(pal2) pairs(pal2, colorspace = \"HSL\")"},{"path":"https://jolars.github.io/qualpalr/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Automatic Generation of Qualitative Color Palettes","text":"current CRAN release can installed running development version can installed running","code":"install.packages(\"qualpalr\") devtools::install_github(\"jolars/qualpalr\")"},{"path":"https://jolars.github.io/qualpalr/dev/index.html","id":"versioning","dir":"","previous_headings":"","what":"Versioning","title":"Automatic Generation of Qualitative Color Palettes","text":"Versioning based semantic versioning.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"Automatic Generation of Qualitative Color Palettes","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Automatic Generation of Qualitative Color Palettes","text":"qualpalr open source software, licensed GPL-3.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/reference/analyze_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze a categorical color palette — analyze_palette","title":"Analyze a categorical color palette — analyze_palette","text":"Analyze categorical color palette respect differences colors palette.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/reference/analyze_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze a categorical color palette — analyze_palette","text":"","code":"analyze_palette(   palette,   cvd = c(protan = 0, deutan = 0, tritan = 0),   bg = NULL,   metric = c(\"ciede2000\", \"din99d\", \"cie76\") )"},{"path":"https://jolars.github.io/qualpalr/dev/reference/analyze_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze a categorical color palette — analyze_palette","text":"palette Either matrix RGB values (values 0 1), data frame RGB values, character vector hex colors. cvd Color vision deficiency adaptation. must named vector names protan, deutan, tritan values 0 1, 0 means adaptation 1 means full adaptation. bg Backgrouind color consider (include) generating palette. useful avoid colros close background/canvas color. NULL (default), background color considered . color convertable via col2rgb acceptable, including hex colors. metric color metric use color distance matrix.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/reference/analyze_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze a categorical color palette — analyze_palette","text":"list lists, one type color vision deficiency plus normal vision. list contains difference_matrix, min_distances, bg_min_distance","code":""},{"path":[]},{"path":"https://jolars.github.io/qualpalr/dev/reference/analyze_palette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze a categorical color palette — analyze_palette","text":"","code":"pal <- qualpal(5) analyze_palette(pal$hex, cvd = c(protan = 1)) #> $deutan #> $deutan$difference_matrix #>          #c8cb70  #7bc4cc  #cb7469  #6d6cc9 #> #7bc4cc 31.92168                            #> #cb7469 41.59276 43.76051                   #> #6d6cc9 64.31978 33.48929 35.21757          #> #d7c3e9 45.21912 31.43774 30.05420 29.97800 #>  #> $deutan$min_distances #>  #c8cb70  #7bc4cc  #cb7469  #6d6cc9  #d7c3e9  #> 31.92168 31.43774 30.05420 29.97800 29.97800  #>  #> $deutan$bg_min_distance #> [1] NaN #>  #>  #> $normal #> $normal$difference_matrix #>          #c8cb70  #7bc4cc  #cb7469  #6d6cc9 #> #7bc4cc 31.92168                            #> #cb7469 41.59276 43.76051                   #> #6d6cc9 64.31978 33.48929 35.21757          #> #d7c3e9 45.21912 31.43774 30.05420 29.97800 #>  #> $normal$min_distances #>  #c8cb70  #7bc4cc  #cb7469  #6d6cc9  #d7c3e9  #> 31.92168 31.43774 30.05420 29.97800 29.97800  #>  #> $normal$bg_min_distance #> [1] NaN #>  #>  #> $protan #> $protan$difference_matrix #>           #c8cb70   #7bc4cc   #cb7469   #6d6cc9 #> #7bc4cc 31.794395                               #> #cb7469 26.259368 26.871922                     #> #6d6cc9 57.422891 26.634673 36.610806           #> #d7c3e9 38.360173  6.724315 33.522738 26.562888 #>  #> $protan$min_distances #>   #c8cb70   #7bc4cc   #cb7469   #6d6cc9   #d7c3e9  #> 26.259368  6.724315 26.259368 26.562888  6.724315  #>  #> $protan$bg_min_distance #> [1] NaN #>  #>  #> $tritan #> $tritan$difference_matrix #>          #c8cb70  #7bc4cc  #cb7469  #6d6cc9 #> #7bc4cc 31.92168                            #> #cb7469 41.59276 43.76051                   #> #6d6cc9 64.31978 33.48929 35.21757          #> #d7c3e9 45.21912 31.43774 30.05420 29.97800 #>  #> $tritan$min_distances #>  #c8cb70  #7bc4cc  #cb7469  #6d6cc9  #d7c3e9  #> 31.92168 31.43774 30.05420 29.97800 29.97800  #>  #> $tritan$bg_min_distance #> [1] NaN #>  #>"},{"path":"https://jolars.github.io/qualpalr/dev/reference/autopal-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimize color palette for color vision deficiency — autopal-deprecated","title":"Optimize color palette for color vision deficiency — autopal-deprecated","text":"Deprecated: function deprecated removed future release. direct replacement.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/reference/autopal-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimize color palette for color vision deficiency — autopal-deprecated","text":"n Number colors generate. colorspace Either 1) list three named numeric vectors: h (hue), s (saturation), l (lightness), length 2 specifying min max value range. values range -360 360 h, 0 1 s l 2), 2) character vector specifying one predefined color spaces (see ). cvd Color vision deficiency adaptation adapt color palette . target Target color difference.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/reference/autopal-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimize color palette for color vision deficiency — autopal-deprecated","text":"list class qualpal following components. HSL matrix colors HSL color space. RGB matrix colors sRGB color space. hex character vector colors hex notation. de_DIN99d distance matrix color differences according metric used. name misleading, bu kept backwards compatibility. hex character vector colors hex notation. min_de_DIN99d minimum pairwise DIN99d color difference among colors palette.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/reference/autopal-deprecated.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Optimize color palette for color vision deficiency — autopal-deprecated","text":"function adapts color palettes color vision deficiency (CVD) optimizing CVD severity try reach target color difference (DIN99d \\(\\delta E\\)) user's choosing. Basically, choose color palette close possible target \\(\\delta E\\) tweaking CVD severity option qualpal. rationale function colors color palette, cost involved adapting colors CVD – colors still remain distinct. colors added palette, however, adapting color palette CVD eventually lead colors similar. function gradually loosens adaptation CVDs lowering severity CVD simulate picking colors (cvd_severity argument qualpal)","code":""},{"path":[]},{"path":"https://jolars.github.io/qualpalr/dev/reference/convert_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert colors between colorspaces — convert_colors","title":"Convert colors between colorspaces — convert_colors","text":"Convert colors colorspaces","code":""},{"path":"https://jolars.github.io/qualpalr/dev/reference/convert_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert colors between colorspaces — convert_colors","text":"","code":"convert_colors(colors, from, to)"},{"path":"https://jolars.github.io/qualpalr/dev/reference/convert_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert colors between colorspaces — convert_colors","text":"colors matrix colors colorspace input colors, one \"rgb\", \"hsl\", \"din99d\", \"lab\", \"xyz\" colorspace output colors, one \"rgb\", \"hsl\", \"lab\", \"xyz\"","code":""},{"path":"https://jolars.github.io/qualpalr/dev/reference/convert_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert colors between colorspaces — convert_colors","text":"colors converted new colorspace","code":""},{"path":"https://jolars.github.io/qualpalr/dev/reference/get_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve one of the built-in color palettes — get_palette","title":"Retrieve one of the built-in color palettes — get_palette","text":"function retrieves color palette built-palettes. see available palettes, use list_palettes().","code":""},{"path":"https://jolars.github.io/qualpalr/dev/reference/get_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve one of the built-in color palettes — get_palette","text":"","code":"get_palette(palette = \"ColorBrewer:Accent\")"},{"path":"https://jolars.github.io/qualpalr/dev/reference/get_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve one of the built-in color palettes — get_palette","text":"palette character string specifying name color palette ","code":""},{"path":"https://jolars.github.io/qualpalr/dev/reference/get_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve one of the built-in color palettes — get_palette","text":"character vector colors hex format.","code":""},{"path":[]},{"path":"https://jolars.github.io/qualpalr/dev/reference/get_palette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve one of the built-in color palettes — get_palette","text":"","code":"get_palette(\"Vermeer:LittleStreet\") #>  [1] \"#9D3D2D\" \"#99A8A5\" \"#8F4C2D\" \"#6A6A54\" \"#EADAC5\" \"#27221F\" \"#727C73\" #>  [8] \"#C9AA82\" \"#3A2D22\" \"#8F5144\" \"#C9BDA3\""},{"path":"https://jolars.github.io/qualpalr/dev/reference/list_palettes.html","id":null,"dir":"Reference","previous_headings":"","what":"List available color palettes — list_palettes","title":"List available color palettes — list_palettes","text":"List available color palettes","code":""},{"path":"https://jolars.github.io/qualpalr/dev/reference/list_palettes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List available color palettes — list_palettes","text":"","code":"list_palettes()"},{"path":"https://jolars.github.io/qualpalr/dev/reference/list_palettes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List available color palettes — list_palettes","text":"list available color palettes. palette named list charatcer vector.","code":""},{"path":[]},{"path":"https://jolars.github.io/qualpalr/dev/reference/list_palettes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List available color palettes — list_palettes","text":"","code":"list_palettes() #> $ColorBrewer #>  [1] \"Accent\"   \"Blues\"    \"BrBG\"     \"BuGn\"     \"BuPu\"     \"Dark2\"    #>  [7] \"GnBu\"     \"Greens\"   \"Greys\"    \"OrRd\"     \"Oranges\"  \"PRGn\"     #> [13] \"Paired\"   \"Pastel1\"  \"Pastel2\"  \"PiYG\"     \"PuBu\"     \"PuBuGn\"   #> [19] \"PuOr\"     \"PuRd\"     \"Purples\"  \"RdBu\"     \"RdGy\"     \"RdPu\"     #> [25] \"RdYlBu\"   \"RdYlGn\"   \"Reds\"     \"Set1\"     \"Set2\"     \"Set3\"     #> [31] \"Spectral\" \"YlGn\"     \"YlGnBu\"   \"YlOrBr\"   \"YlOrRd\"   #>  #> $Ochre #>  [1] \"DeadReef\"        \"EmuWomanPaired\"  \"Galah\"           \"HealthyReef\"     #>  [5] \"JumpingFrog\"     \"Lorikeet\"        \"Mccrea\"          \"NamatjiraDiv\"    #>  [9] \"NamatjiraQual\"   \"NolanNed\"        \"OlsenQual\"       \"OlsenSeq\"        #> [13] \"Parliament\"      \"Tasmania\"        \"WilliamsPilbara\" \"Winmar\"          #>  #> $Pokemon #>  [1] \"Armaldo\"    \"Charizard\"  \"Crawdaunt\"  \"Croconaw\"   \"Cyndaquil\"  #>  [6] \"Deoxys\"     \"Dunsparce\"  \"Exploud\"    \"Feraligatr\" \"Girafarig\"  #> [11] \"Illumise\"   \"Loudred\"    \"Masquerain\" \"Medicham\"   \"Minun\"      #> [16] \"Misdreavus\" \"Murkrow\"    \"Ninjask\"    \"Pidgeotto\"  \"Porygon\"    #> [21] \"Quilava\"    \"Roselia\"    \"Surskit\"    \"Totodile\"   \"Typhlosion\" #> [26] \"Volbeat\"    \"Yanma\"      #>  #> $Rembrandt #> [1] \"AnatomyLesson\" \"Staalmeesters\" #>  #> $Stata #> [1] \"Economist\" \"S1Color\"   \"S1Rcolor\"  \"S2Color\"   #>  #> $Tableau #> [1] \"10\"         \"20\"         \"ColorBlind\" #>  #> $Vermeer #> [1] \"LittleStreet\" \"Milkmaid\"     \"PearlEarring\" \"ViewOfDelft\"  #>"},{"path":"https://jolars.github.io/qualpalr/dev/reference/pairs.qualpal.html","id":null,"dir":"Reference","previous_headings":"","what":"Scatterplot matrix of qualitative color palette — pairs.qualpal","title":"Scatterplot matrix of qualitative color palette — pairs.qualpal","text":"Plots colors object class  \"qualpal\" scatterplot matrix either DIN99d (default) HSL color space.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/reference/pairs.qualpal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scatterplot matrix of qualitative color palette — pairs.qualpal","text":"","code":"# S3 method for class 'qualpal' pairs(x, colorspace = c(\"DIN99d\", \"HSL\", \"RGB\"), ...)"},{"path":"https://jolars.github.io/qualpalr/dev/reference/pairs.qualpal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scatterplot matrix of qualitative color palette — pairs.qualpal","text":"x list object class \"qualpal\" generated qualpal. colorspace color space plot colors (\"DIN99d\", \"HSL\", \"RGB\"). ... Arguments pass pairs.","code":""},{"path":[]},{"path":"https://jolars.github.io/qualpalr/dev/reference/pairs.qualpal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scatterplot matrix of qualitative color palette — pairs.qualpal","text":"","code":"col_pal <- qualpal(3) pairs(col_pal)  pairs(col_pal, colorspace = \"HSL\")"},{"path":"https://jolars.github.io/qualpalr/dev/reference/plot.qualpal.html","id":null,"dir":"Reference","previous_headings":"","what":"Multidimensional scaling map of qualitative color palette — plot.qualpal","title":"Multidimensional scaling map of qualitative color palette — plot.qualpal","text":"Uses colors qualpal object compute plot multidimensional scaling (MDS) map using cmdscale Delta E DIN99d distance matrix.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/reference/plot.qualpal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multidimensional scaling map of qualitative color palette — plot.qualpal","text":"","code":"# S3 method for class 'qualpal' plot(x, ...)"},{"path":"https://jolars.github.io/qualpalr/dev/reference/plot.qualpal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multidimensional scaling map of qualitative color palette — plot.qualpal","text":"x object class \"qualpal\" generated qualpal. ... Arguments pass plot.","code":""},{"path":[]},{"path":"https://jolars.github.io/qualpalr/dev/reference/plot.qualpal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multidimensional scaling map of qualitative color palette — plot.qualpal","text":"","code":"col_pal <- qualpal(3) plot(col_pal)"},{"path":"https://jolars.github.io/qualpalr/dev/reference/print.qualpal.html","id":null,"dir":"Reference","previous_headings":"","what":"Print qualpal palette — print.qualpal","title":"Print qualpal palette — print.qualpal","text":"Print result call qualpal.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/reference/print.qualpal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print qualpal palette — print.qualpal","text":"","code":"# S3 method for class 'qualpal' print(x, colorspace = c(\"HSL\", \"DIN99d\", \"RGB\"), digits = 2, ...)"},{"path":"https://jolars.github.io/qualpalr/dev/reference/print.qualpal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print qualpal palette — print.qualpal","text":"x object class \"qualpal\". colorspace Color space print colors . digits Number significant digits output. (See print.default.) Setting NULL uses getOption(\"digits\"). ... Arguments pass print.default.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/reference/print.qualpal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print qualpal palette — print.qualpal","text":"Prints colors matrix specified color space well distance matrix color differences. Invisibly returns x.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/reference/print.qualpal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print qualpal palette — print.qualpal","text":"","code":"f <- qualpal(3) print(f, colorspace = \"DIN99d\", digits = 3) #> ----------------------------------------  #> Colors in the DIN99d color space  #>  #>         L(99d) a(99d) b(99d) #> #c8cb70   82.2   -4.3  30.24 #> #c96c74   60.3   30.4   6.17 #> #70a3c8   68.4  -14.6 -18.49 #>  #>  ----------------------------------------  #> DIN99d color difference distance matrix  #>  #>         #c8cb70 #c96c74 #> #c96c74    22.3         #> #70a3c8    23.7    23.8"},{"path":"https://jolars.github.io/qualpalr/dev/reference/qualpal-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimize color palette for color vision deficiency — autopal","title":"Optimize color palette for color vision deficiency — autopal","text":"Optimize color palette color vision deficiency Deprecated functions package qualpal. functions listed deprecated defunct next major version future. possible, alternative functions similar functionality also mentioned. Help pages deprecated functions available help(\"<function>-deprecated\").","code":""},{"path":"https://jolars.github.io/qualpalr/dev/reference/qualpal-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimize color palette for color vision deficiency — autopal","text":"","code":"autopal(   n,   colorspace = list(h = c(0, 360), s = c(0.2, 0.5), l = c(0.6, 0.85)),   cvd = c(\"protan\", \"deutan\", \"tritan\"),   target = 20 )"},{"path":"https://jolars.github.io/qualpalr/dev/reference/qualpal-deprecated.html","id":"autopal","dir":"Reference","previous_headings":"","what":"autopal","title":"Optimize color palette for color vision deficiency — autopal","text":"function deprecated removed future release. direct replacement available.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/reference/qualpal.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate qualitative color palettes — qualpal","title":"Generate qualitative color palettes — qualpal","text":"Given collection colors, qualpal() algorithmically tries select n distinct colors provided input colors, optionally taking color vision deficiency account.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/reference/qualpal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate qualitative color palettes — qualpal","text":"","code":"qualpal(   n,   colorspace = list(h = c(0, 360), s = c(0.2, 0.5), l = c(0.6, 0.85)),   cvd = c(protan = 0, deutan = 0, tritan = 0),   cvd_severity,   bg = NULL,   metric = c(\"ciede2000\", \"din99d\", \"cie76\"),   extend = NULL )"},{"path":"https://jolars.github.io/qualpalr/dev/reference/qualpal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate qualitative color palettes — qualpal","text":"n number colors generate. colorspace color space generate colors . Can following: list describes color space either HSL LCHab color space. first case (HSL), list must contain following named vectors, length two, giving range item. h Hue, range -360 360 s Saturation, range 0 1 l Lightness, range 0 1 second case (LCHab), list must contain following named vectors, length two, giving range item. h Hue, range -360 360 c Chroma, range 0 infinity l Lightness, range 0 100 cases, qualpal() generate character vector length one form \"Source:Palette\", Domain name source provides color palette, Palette name color palette source. See list_palettes() available palettes. cvd Color vision deficiency adaptation. must named vector names protan, deutan, tritan values 0 1, 0 means adaptation 1 means full adaptation. cvd_severity DEPRECATED. Use named cvd vector instead, e.g. c(protan = 0.5, deutan = 0.2, tritan = 0). bg Backgrouind color consider (include) generating palette. useful avoid colros close background/canvas color. NULL (default), background color considered . color convertable via col2rgb acceptable, including hex colors. metric color metric use color distance matrix. extend palette colors use fixed set initial colors palette, can either matrix data frame RGB values (values 0 1) character vector hex colors (format acceptable grDevices::col2rgb()).","code":""},{"path":"https://jolars.github.io/qualpalr/dev/reference/qualpal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate qualitative color palettes — qualpal","text":"list class qualpal following components. HSL matrix colors HSL color space. RGB matrix colors sRGB color space. hex character vector colors hex notation. de_DIN99d distance matrix color differences according metric used. name misleading, bu kept backwards compatibility. hex character vector colors hex notation. min_de_DIN99d minimum pairwise DIN99d color difference among colors palette.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/reference/qualpal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate qualitative color palettes — qualpal","text":"main idea compute distance matrix input colors, try select distinct colors based color differences . iteratively first selecting first n colors input colors, iterates palette, putting colors back total set replaces new color gone whole range without changing colors. Optionally, qualpal can adapt palettes cater color vision deficiency (CVD). accomplished taking colors provided user transforming colors someone CVD see, , simulating CVD qualpal chooses colors new colors.","code":""},{"path":[]},{"path":"https://jolars.github.io/qualpalr/dev/reference/qualpal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate qualitative color palettes — qualpal","text":"","code":"# Generate 3 distinct colors from the default color space qualpal(3) #> ----------------------------------------  #> Colors in the HSL color space  #>  #>         Hue Saturation Lightness #> #c8cb70  62       0.47      0.62 #> #c96c74 355       0.47      0.61 #> #70a3c8 205       0.45      0.61 #>  #>  ----------------------------------------  #> DIN99d color difference distance matrix  #>  #>         #c8cb70 #c96c74 #> #c96c74      22         #> #70a3c8      24      24  # Provide a custom color space qualpal(n = 3, list(h = c(35, 360), s = c(0.5, 0.7), l = c(0, 0.45))) #> ----------------------------------------  #> Colors in the HSL color space  #>  #>         Hue Saturation Lightness #> #b32eb6 298       0.60     0.449 #> #9eba25  71       0.66     0.440 #> #071e06 117       0.67     0.073 #>  #>  ----------------------------------------  #> DIN99d color difference distance matrix  #>  #>         #b32eb6 #9eba25 #> #9eba25      32         #> #071e06      30      29  qualpal(3, \"ColorBrewer:Set2\") #> ----------------------------------------  #> Colors in the HSL color space  #>  #>         Hue Saturation Lightness #> #a6d854  83       0.63      0.59 #> #fc8d62  17       0.96      0.69 #> #8da0cb 222       0.37      0.67 #>  #>  ----------------------------------------  #> DIN99d color difference distance matrix  #>  #>         #a6d854 #fc8d62 #> #fc8d62      22         #> #8da0cb      26      24  # Adapt palette to deuteranopia qualpal(5, \"ColorBrewer:Dark2\", cvd = c(deutan = 1)) #> ----------------------------------------  #> Colors in the HSL color space  #>  #>         Hue Saturation Lightness #> #e6ab02  44       0.98      0.45 #> #a6761d  39       0.70      0.38 #> #1b9e77 162       0.71      0.36 #> #7570b3 244       0.31      0.57 #> #e7298a 329       0.80      0.53 #>  #>  ----------------------------------------  #> DIN99d color difference distance matrix  #>  #>         #e6ab02 #a6761d #1b9e77 #7570b3 #> #a6761d      12                         #> #1b9e77      24      23                 #> #7570b3      29      26      24         #> #e7298a      26      22      31      20  # Adapt palette to protanomaly with severity 0.4 qualpal(8, cvd = c(protan = 0.4)) #> ----------------------------------------  #> Colors in the HSL color space  #>  #>         Hue Saturation Lightness #> #c96c74 355       0.47      0.61 #> #6d6cc9 241       0.47      0.61 #> #d890cb 310       0.48      0.71 #> #7dbdcf 193       0.46      0.65 #> #c1e4d3 150       0.40      0.83 #> #e5bbbd 357       0.45      0.82 #> #c49670  27       0.42      0.61 #> #8acb6c 102       0.48      0.61 #>  #>  ----------------------------------------  #> DIN99d color difference distance matrix  #>  #>         #c96c74 #6d6cc9 #d890cb #7dbdcf #c1e4d3 #e5bbbd #c49670 #> #6d6cc9      22                                                 #> #d890cb      14      16                                         #> #7dbdcf      25      19      22                                 #> #c1e4d3      25      25      23      13                         #> #e5bbbd      14      22      13      20      17                 #> #c49670      12      25      18      22      19      12         #> #8acb6c      26      29      27      19      14      22      19  # Generate and extend a palette with 3 colors, using the DIN99d # metric pal <- qualpal(3) qualpal(5, extend = pal$hex, metric = \"din99d\") #> ----------------------------------------  #> Colors in the HSL color space  #>  #>         Hue Saturation Lightness #> #c8cb70  62       0.47      0.62 #> #c96c74 355       0.46      0.61 #> #70a3c8 205       0.44      0.61 #> #9467ca 267       0.48      0.60 #> #e6c5e5 301       0.39      0.84 #>  #>  ----------------------------------------  #> DIN99d color difference distance matrix  #>  #>         #c8cb70 #c96c74 #70a3c8 #9467ca #> #c96c74      22                         #> #70a3c8      24      24                 #> #9467ca      29      19      18         #> #e6c5e5      22      18      18      17  if (FALSE) { # \\dontrun{ # The range of hue cannot exceed 360 qualpal(3, list(h = c(-20, 360), s = c(0.5, 0.7), l = c(0, 0.45))) } # }"},{"path":"https://jolars.github.io/qualpalr/dev/reference/qualpalr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"qualpalr: Automatic Generation of Qualitative Color Palettes — qualpalr-package","title":"qualpalr: Automatic Generation of Qualitative Color Palettes — qualpalr-package","text":"Automatic generation maximally distinct qualitative color palettes, optionally tailored color deficiency. list colors subspace color space used input projected DIN99d color space, colors maximally distinct chosen algorithmically.","code":""},{"path":[]},{"path":"https://jolars.github.io/qualpalr/dev/reference/qualpalr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"qualpalr: Automatic Generation of Qualitative Color Palettes — qualpalr-package","text":"Maintainer: Johan Larsson johanlarsson@outlook.com (ORCID)","code":""},{"path":[]},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"new-or-modified-features-1-0-0","dir":"Changelog","previous_headings":"","what":"New or Modified Features","title":"qualpalr 1.0.0","text":"qualpal() now uses CIEDE2000 metric instead DIN99d one default. Users can still specify DIN99d metric passing metric = \"din99d\" qualpal(). character method qualpal() function now accepts name predefined palette, \"ColorBrewer::Set1\" \"Tableau::10\", use corresponding palette’s colors input. Passing one old colorspace names now throws warning removed next major release. qualpal() now accepts background color bg argument, considered generating palette, included fina palette. color difference metric qualpal() can now specified using metric argument, accepts either \"din99d\" (default), \"ciede2000\", \"cie76\". Expect slower performance \"ciede2000\". autopal() function now deprecated removed int next major release. direct replacement. ’s new function, analyze_palette(), analyzes categorical color palette. qualpal() now extend method allows user extend existing palette adding colors . useful expanding existing palette include colors. color space (list) method qualpal() now accepts specification LCHab (HCL) color space, cylindrical representation Lab color space. mostly added simplify comparisons packages use LCHab input. still recommend using HSL color space, intuitive users. ’s new function, list_palettes(), lists built-palettes available package, can thus used new character method qualpal(). includes predefined palettes ColorBrewer, Tableau, sources. ’s new function, get_palette(), retrieves palette name built-palettes. cvd argument now accepts named numeric vector, allows specifying severity color vision deficiency type deficiency. names \"protan\", \"deuter\", \"tritan\". cvd_severity argument deprecated removed next major release. cvd argument now handles cases color vision deficiency adaptation directly.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"refactoring-1-0-0","dir":"Changelog","previous_headings":"","what":"Refactoring","title":"qualpalr 1.0.0","text":"entire C++ backend package rewritten outsourced separate C++ library, qualpal.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"bug-fixes-1-0-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"qualpalr 1.0.0","text":"inconsistency conversion Lab DIN99d color space, reference white point modified correctly, fixed.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"performance-improvements-1-0-0","dir":"Changelog","previous_headings":"","what":"Performance Improvements","title":"qualpalr 1.0.0","text":"color distance computation parallelized using OpenMP. heavy lifting now done C++, significantly improve performance, especially larger palettes.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"qualpalr-044","dir":"Changelog","previous_headings":"","what":"qualpalr 0.4.4","title":"qualpalr 0.4.4","text":"CRAN release: 2023-09-13","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"minor-changes-0-4-4","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"qualpalr 0.4.4","text":"dependency RcppParallel dropped. result, argument n_threads now deprecated (effect).","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"qualpalr-043","dir":"Changelog","previous_headings":"","what":"qualpalr 0.4.3","title":"qualpalr 0.4.3","text":"CRAN release: 2018-10-29","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"minor-changes-0-4-3","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"qualpalr 0.4.3","text":"qualpal() gains argument, n_threads, specifying number threads use computing distance matrix colors. C++ functions call namespaces explicitly using ::. Documentation hue saturation qualpal() fixed. (Closes #2, thanks @jflycn).","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"qualpalr-042","dir":"Changelog","previous_headings":"","what":"qualpalr 0.4.2","title":"qualpalr 0.4.2","text":"CRAN release: 2017-08-28","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"major-changes-0-4-2","dir":"Changelog","previous_headings":"","what":"Major changes","title":"qualpalr 0.4.2","text":"Palettes longer generated randomly. qualpalr previously started random sample colors running optimization scheme now instead picks starting set linearly spaced colors.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"minor-changes-0-4-2","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"qualpalr 0.4.2","text":"C++ functions registered via Rcpp.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"bug-fixes-0-4-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"qualpalr 0.4.2","text":"autopal() erroneously required colorspace string.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"qualpalr-041","dir":"Changelog","previous_headings":"","what":"qualpalr 0.4.1","title":"qualpalr 0.4.1","text":"CRAN release: 2017-05-15","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"bug-fixes-0-4-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"qualpalr 0.4.1","text":"Fixed autopal() broken since minimum color difference returned always 0 due bug qualpal().","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"minor-changes-0-4-1","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"qualpalr 0.4.1","text":"Now registers compiled functions.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"qualpalr-040","dir":"Changelog","previous_headings":"","what":"qualpalr 0.4.0","title":"qualpalr 0.4.0","text":"CRAN release: 2017-03-16","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"major-changes-0-4-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"qualpalr 0.4.0","text":"autopal() new function tweaks amount color vision deficiency adaptation match target color difference. qualpal() argument colorspace now also accepts matrix data.frame RGB colors.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"minor-changes-0-4-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"qualpalr 0.4.0","text":"qualpal() sorts palettes order increasing color distinctness. qualpal() argument colorblind made defunct. Documentation qualpal() improved. Colors now generated randtoolbox::torus() instead randtoolbox::sobol().","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"qualpalr-031","dir":"Changelog","previous_headings":"","what":"qualpalr 0.3.1","title":"qualpalr 0.3.1","text":"CRAN release: 2016-12-22","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"bug-fixes-0-3-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"qualpalr 0.3.1","text":"Dropped C++ header caused package build fail platforms. Fixed issues uninitialized variables internal farthest points optimizer.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"qualpalr-030","dir":"Changelog","previous_headings":"","what":"qualpalr 0.3.0","title":"qualpalr 0.3.0","text":"CRAN release: 2016-12-20","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"new-features-0-3-0","dir":"Changelog","previous_headings":"","what":"New features","title":"qualpalr 0.3.0","text":"Improved algorithm finding distinct colors. (details see .) Revamped color deficiency handling include almost cases color deficiency using methods described Machado et al. 2009, now including tritanopia well anomalous trichromacies (deuteranomaly, tritanomaly, protanomaly). controlled via cvd_severity argument qualpal() allows user set severity color deficiency adapt – 0 normal vision 1 dichromatic vision (protanopia, deuteranopia, tritanopia).","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"minor-improvements-0-3-0","dir":"Changelog","previous_headings":"","what":"Minor improvements","title":"qualpalr 0.3.0","text":"Distance color picking algorithms rewritten C++ using Rcpp, RcppParallel, RcppArmadillo. Phased ... argument qualpal. Lightness range predefined rainbow palette increased [0, 1]. Changed argument name colorblind cvd (color vision deficiency) since function now adapts less severe versions color deficiency. Using colorblind deprecated throw warning.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"bug-fixes-0-3-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"qualpalr 0.3.0","text":"Fixed typos invalid links Introduction qualpalr vignette.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"qualpalr-021","dir":"Changelog","previous_headings":"","what":"qualpalr 0.2.1","title":"qualpalr 0.2.1","text":"CRAN release: 2016-10-09","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"new-features-0-2-1","dir":"Changelog","previous_headings":"","what":"New features","title":"qualpalr 0.2.1","text":"Dropped daltonization since effectively transposed color subspace given user. qualpalr now instead transforms given color subspace simulate protanopia deuteranopia picks colors. side-effect decreasing distinctness color palettes colorblind used, consistent user input.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"bug-fixes-and-minor-improvements-0-2-1","dir":"Changelog","previous_headings":"","what":"Bug fixes and minor improvements","title":"qualpalr 0.2.1","text":"Simulations tritanopia dropped since reliable source explain sRGB ranges converted (deuteranopia protanopia Vienot et al 1999). Added tests using data Vienot et al 1999 check color blind simulations work properly. Fixed sampling bug wherein square root saturation taken scaling provided range, generated different ranges intended. Switched sobol quasi-random sequence instead torus.","code":""},{"path":[]},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"","what":"New features","title":"qualpalr 0.2.0","text":"Redesigned method qualpal picks colors. Now initializes point cloud colors, projects DIN99d space, picks points greedily. Introduced real methods adapting colors color blindness daltonizing color subspaces picking colors . introduction qualpalr vignette expanded thorough description qualpalr picks colors.","code":""},{"path":"https://jolars.github.io/qualpalr/dev/news/index.html","id":"bug-fixes-and-minor-improvements-0-2-0","dir":"Changelog","previous_headings":"","what":"Bug fixes and minor improvements","title":"qualpalr 0.2.0","text":"Moved using grDevices::convertColor formulas Bruce Lindbloom color conversions, since former function inaccurately converts colors. Deprecated ... qualpal since function longer uses optimizer.","code":""}]
